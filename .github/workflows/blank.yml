name: Weather Report Automation

on:
  # 定时触发（北京时间 8:00，对应 UTC 0:00，cron 格式为：分钟 小时 日 月 周）
  schedule:
    - cron: '0 0 * * *'  # UTC 0 点 = 北京时间 8 点
  # 允许手动触发（方便调试）
  workflow_dispatch:

jobs:
  send-weather-notification:
    runs-on: ubuntu-latest  # 也可使用 macOS 或 Windows 环境
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: 3.12  # 指定 Python 版本，根据需求调整

      - name: Install dependencies
        run: |
          pip install --no-cache-dir requests beautifulsoup4 html5lib
        # 移除 schedule 库，因改用 GitHub Actions 定时

      - name: Run weather report script
        env:
          # 注入环境变量（需在 GitHub 仓库 Settings → Secrets 中提前配置）
          WECHAT_APPID: ${{ secrets.WECHAT_APPID }}
          WECHAT_APPSECRET: ${{ secrets.WECHAT_APPSECRET }}
          WECHAT_OPENID: ${{ secrets.WECHAT_OPENID }}
          WEATHER_TEMPLATE_ID: ${{ secrets.WEATHER_TEMPLATE_ID }}
          TIMETABLE_TEMPLATE_ID: ${{ secrets.TIMETABLE_TEMPLATE_ID }}
        run: |
          python weather-report  # 执行单次天气报告，无循环，执行完自动退出

      - name: Log success
        if: success()
        run: echo "Weather report workflow completed successfully!"

      - name: Log failure
        if: failure()
        run: echo "Weather report workflow failed!"
